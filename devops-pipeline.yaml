--- 
name: "$(date:yyyyMMdd)$(rev:.rr)"
stages: 
  - 
    condition: succeeded()
    displayName: build-mvc
    jobs: 
      - 
        condition: succeeded()
        displayName: build-process
        job: ~
        pool: 
          vmImage: ubuntu-16.04
        steps: 
          - 
            displayName: "dotnet installer"
            inputs: 
              version: "2.2.401"
            task: UseDotNet@2
          - 
            script: "dotnet build\n"
    stage: build
  - 
    condition: succeeded()
    displayName: test-mvc
    jobs: 
      - 
        condition: succeeded()
        displayName: test-process
        job: ~
        pool: 
          vmImage: ubuntu-16.04
        steps: 
          - 
            displayName: "dotnet installer"
            inputs: 
              version: "2.2.401"
            task: UseDotNet@2
          - 
            script: "dotnet tool install --global dotnet-sonarscanner\n\
                dotnet sonarscanner begin /k:\"devopsworld\" /o:\"vitrv\" /d:sonar.login=\"69cacea30ac715bf84e3d6692e6cd8013e486f16\" /d:sonar.host.url=\"https://sonarcloud.io\"\n\
                dotnet build\n\
                dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=\\\"cobertura,opencover\\\" /p:Exclude=[xunit*]*\n\
                dotnet sonarscanner end /d:sonar.login=\"69cacea30ac715bf84e3d6692e6cd8013e486f16\" \n"
          - 
            displayName: "publish result::unit-test"
            inputs: 
              testResultsFiles: "**/*.trx"
              testRunner: VSTest
            task: PublishTestResults@2
          - 
            displayName: "publish result::code-coverage"
            inputs: 
              codeCoverageTool: cobertura
              summaryFileLocation: "**/coverage.cobertura.xml"
            task: PublishCodeCoverageResults@1
    stage: test
  - 
    condition: succeeded()
    dependsOn: 
      - test
    displayName: pack-mvc
    jobs: 
      - 
        condition: succeeded()
        displayName: pack-process
        job: ~
        pool: 
          vmImage: ubuntu-16.04
        steps: 
          - 
            displayName: "docker login"
            inputs: 
              command: login
              containerRegistry: docker
            task: Docker@2
          - 
            script: |
                docker image build --file Dockerfile --tag devopsworld .
                docker image tag devopsworld lncatano/devopsworld
                docker push lncatano/devopsworld
          - 
            displayName: "docker login"
            inputs: 
              command: logout
              containerRegistry: docker
            task: Docker@2
    stage: pack
  - 
    condition: succeeded()
    dependsOn: 
      - test
    displayName: deploy-mvc
    jobs: 
      - 
        condition: succeeded()
        displayName: deploy-process
        job: ~
        pool: 
          vmImage: ubuntu-16.04
        steps: 
          - 
            script: "echo 'working ont'\n"
    stage: deploy
trigger: 
  branches: 
    include: 
      - master
variables: 
  sonar: 69cacea30ac715bf84e3d6692e6cd8013e486f16
