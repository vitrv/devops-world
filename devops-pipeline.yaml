# devopsworld - pipline

name: $(date:yyyyMMdd)$(rev:.rr)

stages:
  - stage: 'build'
    condition: succeeded()
    displayName: 'build-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'build-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet build

  - stage: 'test'
    condition: succeeded()
    displayName: 'test-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'test-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"devopsworld" /o:"vitrv" /d:sonar.login="69cacea30ac715bf84e3d6692e6cd8013e486f16" /d:sonar.host.url="https://sonarcloud.io"
              dotnet build
              dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=\"cobertura,opencover\" /p:Exclude=[xunit*]*
              dotnet sonarscanner end /d:sonar.login="69cacea30ac715bf84e3d6692e6cd8013e486f16" 
          - task: PublishTestResults@2
            displayName: 'publish result::unit-test'
            inputs:
              testRunner: VSTest
              testResultsFiles: '**/*.trx'
          - task: PublishCodeCoverageResults@1
            displayName: 'publish result::code-coverage'
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: '**/coverage.cobertura.xml'

  - stage: 'pack'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'pack-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'pack-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Docker@2
            inputs: 
              command: 'login'
              containerRegistry: 'docker'
            displayName: 'docker login'
          - script: |
              docker image build --file Dockerfile --tag devopsworld ./
              docker image tag devopsworld lncatano/devopsworld
              docker push lncatano/devopsworld
          - task: Docker@2
            inputs:
              command: 'logout'
              containerRegistry: 'docker'
            displayName: 'docker login'

  - stage: 'deploy'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'deploy-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'deploy-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
        - task: AzureWebAppContainer@1
          inputs:
            azureSubscription: 'Free Trial(045d809c-824e-4fac-9222-ad8c6a5b6b62)'
            appName: 'lnc-dvw'
          - script: |
              echo 'working ont'

trigger:
  branches:
    include:
    - master

variables:
  sonar: '69cacea30ac715bf84e3d6692e6cd8013e486f16'


